package com.zettamine.accounts.controller;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.zettamine.accounts.constants.AppConstants;
import com.zettamine.accounts.dto.CustomerDto;
import com.zettamine.accounts.dto.ResponseDto;
import com.zettamine.accounts.service.IAcountService;

import jakarta.validation.Valid;
import lombok.AllArgsConstructor;

@RestController
@RequestMapping(path ="/api",produces = {MediaType.APPLICATION_JSON_VALUE})
@AllArgsConstructor
public class AccountController {
	
	private IAcountService accountService;
	
	@PostMapping("/create")
	public ResponseEntity<ResponseDto> createAccount(@Valid @RequestBody CustomerDto customerDto){
		
		accountService.createAccount(customerDto);
		
		return ResponseEntity.status(HttpStatus.CREATED).body(new ResponseDto(AppConstants.STATUS_201, AppConstants.MESSAGE_201));
		
	}
	
	@GetMapping("/fetch/{mobileNumber}")
	public ResponseEntity<CustomerDto> fetchCustomerDetails(@PathVariable String mobileNumber){
		
		CustomerDto customerDto = accountService.getCustomerDetailsByMobileNumber(mobileNumber);
		
		return ResponseEntity.status(HttpStatus.OK).body(customerDto);
		
		
	}
	
	@PutMapping("/update")
	public ResponseEntity<ResponseDto> updateCustomerDetails(@RequestBody CustomerDto customerDto){
		
		accountService.updateCustomerDetails(customerDto);
		
		return ResponseEntity.status(HttpStatus.OK).body(new ResponseDto(AppConstants.STATUS_200, AppConstants.MESSAGE_200));
		
	}

}

