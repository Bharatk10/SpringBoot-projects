package com.zettamine.boot.exception;

import java.net.http.HttpHeaders;
import java.util.HashMap;
import java.util.Map;

import org.springframework.dao.DataIntegrityViolationException;
import org.springframework.http.HttpStatus;
import org.springframework.http.HttpStatusCode;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.MethodArgumentNotValidException;
import org.springframework.web.bind.annotation.ControllerAdvice;
import org.springframework.web.bind.annotation.ExceptionHandler;
import org.springframework.web.context.request.WebRequest;
import org.springframework.web.servlet.resource.NoResourceFoundException;

@ControllerAdvice
public class GlobalExceptionHandler {

    @ExceptionHandler(MethodArgumentNotValidException.class)
    protected ResponseEntity<Object> handleMethodArgumentNotValid(MethodArgumentNotValidException ex,
			HttpHeaders headers, HttpStatusCode status, WebRequest request) {
		Map<String, String> erros = new HashMap<>();
		ex.getBindingResult().getFieldErrors().stream().map(m -> erros.put(m.getField(), m.getDefaultMessage()));

		return new ResponseEntity<>(erros, HttpStatus.BAD_REQUEST);
	}
    
    @ExceptionHandler(DataIntegrityViolationException.class)
    public ResponseEntity<?> handelDataInitigirityException(DataIntegrityViolationException ex){
    	
    	return ResponseEntity.status(HttpStatus.CONFLICT).body(ex.getMessage());
    	
    }
    
    @ExceptionHandler(DateViolationException.class)
    public ResponseEntity<?> handelDateViolationException(DateViolationException ex){
    	
    	return ResponseEntity.status(HttpStatus.CONFLICT).body(ex.getMessage());
    	
    }
    
    @ExceptionHandler(NoResourceFoundException.class)
    public ResponseEntity<?> handleException(NoResourceFoundException ex) {
        return ResponseEntity.status(HttpStatusCode.valueOf(404)).body(ex.getMessage());
    }
    @ExceptionHandler(NoResourcesFoundException.class)
    public ResponseEntity<?> handlesException(NoResourcesFoundException ex) {
        return ResponseEntity.status(HttpStatusCode.valueOf(404)).body(ex.getMessage());
    }
   
   
    
  
}
